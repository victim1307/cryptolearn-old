<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>5. RSA on CryptoLearn</title>
    <link>https://victim1307.github.io/cryptolearn/patterns/rsa/</link>
    <description>Recent content in 5. RSA on CryptoLearn</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://victim1307.github.io/cryptolearn/patterns/rsa/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Introduction</title>
      <link>https://victim1307.github.io/cryptolearn/patterns/rsa/introduction/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://victim1307.github.io/cryptolearn/patterns/rsa/introduction/</guid>
      <description>RSA is a widely-used public-key encryption system that is based on the mathematical properties of large prime numbers. It was one of the first practical public-key cryptosystems and is widely used for secure data transmission.
The RSA encryption process consists of two parts: key generation and encryption/decryption.
Key Generation:
 Select two large prime numbers, p and q. Compute n = p*q. n is used as the modulus for both the public and private keys.</description>
    </item>
    
    <item>
      <title>Common Modulus Attack</title>
      <link>https://victim1307.github.io/cryptolearn/patterns/rsa/common-mod/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://victim1307.github.io/cryptolearn/patterns/rsa/common-mod/</guid>
      <description>A common modulus attack on RSA is a type of cryptographic attack that takes advantage of the properties of RSA encryption when the same modulus is used for multiple encryptions.
In RSA, encryption is performed by raising the plaintext message to the power of the public exponent (e) and taking the remainder when divided by the modulus (n). Similarly, decryption is performed by raising the ciphertext to the power of the private exponent (d) and taking the remainder when divided by the modulus (n).</description>
    </item>
    
    <item>
      <title>Wiener Attack</title>
      <link>https://victim1307.github.io/cryptolearn/patterns/rsa/wiener-attack/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://victim1307.github.io/cryptolearn/patterns/rsa/wiener-attack/</guid>
      <description>The Wiener attack is a method for attacking RSA encryption when the private exponent (d) is small relative to the modulus (n). This method is named after mathematician David Wiener, who first described it in a 1990 paper.
The Wiener attack takes advantage of the fact that the private exponent (d) is typically much smaller than the modulus (n) in RSA encryption. If the private exponent (d) is small enough, it is possible to calculate the private key using the relationship between the private exponent (d) and the public exponent (e) in RSA.</description>
    </item>
    
    <item>
      <title>Factorisation</title>
      <link>https://victim1307.github.io/cryptolearn/patterns/rsa/factorisation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://victim1307.github.io/cryptolearn/patterns/rsa/factorisation/</guid>
      <description>Fermat&amp;rsquo;s Factorisation Method Fermat&amp;rsquo;s factorization is an algorithm for factoring integers that is based on Fermat&amp;rsquo;s Little Theorem. The theorem states that if p is a prime number, then for any integer a, the number a^p - a is an integer multiple of p. The algorithm for factoring an integer N is to find two integers a and b such that a^2 - Nb^2 = 1. If such integers are found, then N is the product of the two factors a+b and a-b.</description>
    </item>
    
    <item>
      <title>Coppersmith&#39;s Method</title>
      <link>https://victim1307.github.io/cryptolearn/patterns/rsa/coppersmith/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://victim1307.github.io/cryptolearn/patterns/rsa/coppersmith/</guid>
      <description>Coppersmith&amp;rsquo;s attack is a technique used in cryptography to factorize the private key of a public key encryption system. It is applied specifically to RSA encryption, which is one of the most widely used public key encryption systems.
In RSA encryption, the private key is generated by multiplying two prime numbers. Coppersmith&amp;rsquo;s attack exploits the low-order bits of the private key to find the prime factors. The technique is based on the observation that the modular reduction operation used in RSA encryption does not affect the lower order bits of the private key.</description>
    </item>
    
  </channel>
</rss>
